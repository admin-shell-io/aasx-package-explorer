<Window x:Class="AasxPackageExplorer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
        xmlns:local="clr-namespace:AasxPackageExplorer;assembly=AasxWpfControlLibrary"
        xmlns:main="clr-namespace:AasxPackageExplorer"
        xmlns:events="clr-namespace:AasxWpfControlLibrary.AdminShellEvents;assembly=AasxWpfControlLibrary"
        xmlns:repo="clr-namespace:AasxWpfControlLibrary.PackageCentral;assembly=AasxWpfControlLibrary"
        mc:Ignorable="d"
        x:Name="mainWindow"
        Title="AASX Package Explorer" Height="350" Width="700" Loaded="Window_Loaded" AllowDrop="True"
        DragEnter="Window_DragEnter" Drop="Window_Drop" Closing="Window_Closing" SizeChanged="Window_SizeChanged"
        PreviewKeyDown="mainWindow_PreviewKeyDown" >
    <!--
    Copyright (c) 2018-2021 Festo AG & Co. KG <https://www.festo.com/net/de_de/Forms/web/contact_international>
    Author: Michael Hoffmeister

    This source code is licensed under the Apache License 2.0 (see LICENSE.txt).

    This source code may use other Open Source software components (see LICENSE.txt).
    -->

    <!-- TODO: fix again -->
    <!-- ReSharper disable Xaml.MissingGridIndex -->

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/AasxIntegrationBaseWpf;component/Themes/Generic.xaml"/>
                <ResourceDictionary>
                    <RoutedUICommand x:Key="ExportSMD" Text="ExportSMD" />
                    <RoutedUICommand x:Key="New" Text="New" />
                    <RoutedUICommand x:Key="Open" Text="Open" />
                    <RoutedUICommand x:Key="Save" Text="Save" />
                    <RoutedUICommand x:Key="SaveAs" Text="SaveAs" />
                    <RoutedUICommand x:Key="Close" Text="Close" />
                    <RoutedUICommand x:Key="Sign" Text="Sign" />
                    <RoutedUICommand x:Key="ValidateCertificate" Text="ValidateCertificate" />
                    <RoutedUICommand x:Key="Encrypt" Text="Encrypt" />
                    <RoutedUICommand x:Key="Decrypt" Text="Decrypt" />
                    <RoutedUICommand x:Key="CheckAndFix" Text="CheckAndFix" />
                    <RoutedUICommand x:Key="OpenAux" Text="OpenAux" />
                    <RoutedUICommand x:Key="CloseAux" Text="CloseAux" />
                    <RoutedUICommand x:Key="ConnectSecure" Text="ConnectSecure" />
                    <RoutedUICommand x:Key="ConnectIntegrated" Text="ConnectIntegrated" />
                    <RoutedUICommand x:Key="ConnectOpcUa" Text="ConnectOpcUa" />
                    <RoutedUICommand x:Key="ConnectRest" Text="ConnectRest" />
                    <RoutedUICommand x:Key="QueryRepo" Text="QueryRepo" />
                    <RoutedUICommand x:Key="GenRepo" Text="GenRepo" />
                    <RoutedUICommand x:Key="PrintRepo" Text="PrintRepo" />
                    <RoutedUICommand x:Key="PrintAsset" Text="PrintAsset" />
                    <RoutedUICommand x:Key="ImportAML" Text="ImportAML" />
                    <RoutedUICommand x:Key="ImportSubmodel" Text="ImportSubmodel" />
                    <RoutedUICommand x:Key="ImportSubmodelElements" Text="ImportSubmodelElements" />
                    <RoutedUICommand x:Key="OPCRead" Text="OPCRead" />
                    <RoutedUICommand x:Key="SubmodelWrite" Text="SubmodelWrite" />
                    <RoutedUICommand x:Key="SubmodelRead" Text="SubmodelRead" />
                    <RoutedUICommand x:Key="SubmodelGet" Text="SubmodelGet" />
                    <RoutedUICommand x:Key="SubmodelPut" Text="SubmodelPut" />
                    <RoutedUICommand x:Key="BMEcatImport" Text="BMEcatImport" />
                    <RoutedUICommand x:Key="CSVImport" Text="CSVImport" />
                    <RoutedUICommand x:Key="TDImport" Text="TDImport" />
                    <RoutedUICommand x:Key="SubmodelTDExport" Text="SubmodelTDExport" />
                    <RoutedUICommand x:Key="ExportAML" Text="ExportAML" />
                    <RoutedUICommand x:Key="OpcUaImportNodeSet" Text="OpcUaImportNodeSet" />
                    <RoutedUICommand x:Key="OPCUAi4aasExport" Text="OPCUAi4aasExport" />
                    <RoutedUICommand x:Key="OPCUAi4aasImport" Text="OPCUAi4aasImport" />
                    <RoutedUICommand x:Key="OpcUaExportNodeSetUaPlugin" Text="OpcUaExportNodeSetUaPlugin" />
                    <RoutedUICommand x:Key="CopyClipboardElementJson" Text="CopyClipboardElementJson" />
                    <RoutedUICommand x:Key="ExportGenericForms" Text="ExportGenericForms" />
                    <RoutedUICommand x:Key="ExportPredefineConcepts" Text="ExportPredefineConcepts" />
                    <RoutedUICommand x:Key="ExportTable" Text="ExportTable" />
                    <RoutedUICommand x:Key="ImportTable" Text="ImportTable" />
                    <RoutedUICommand x:Key="ExportUml" Text="ExportUml" />
                    <RoutedUICommand x:Key="ServerRest" Text="ServerRest" />
                    <RoutedUICommand x:Key="MQTTPub" Text="MQTTPub" />
                    <RoutedUICommand x:Key="ServerPluginEmptySample" Text="ServerPluginEmptySample" />
                    <RoutedUICommand x:Key="ServerPluginOPCUA" Text="ServerPluginOPCUA" />
                    <RoutedUICommand x:Key="ServerPluginMQTT" Text="ServerPluginMQTT" />
                    <RoutedUICommand x:Key="Exit" Text="Exit" />
                    <RoutedUICommand x:Key="EditKey" Text="EditKey" />
                    <RoutedUICommand x:Key="HintsKey" Text="HintsKey" />
                    <RoutedUICommand x:Key="ShowIriKey" Text="ShowIriKey" />
                    <RoutedUICommand x:Key="EditMenu" Text="EditMenu" />
                    <RoutedUICommand x:Key="HintsMenu" Text="HintsMenu" />
                    <RoutedUICommand x:Key="ShowIriMenu" Text="ShowIriMenu" />
                    <RoutedUICommand x:Key="VerboseConnect" Text="VerboseConnect" />
                    <RoutedUICommand x:Key="AnimateElements" Text="AnimateElements" />
                    <RoutedUICommand x:Key="ObserveEvents" Text="ObserveEvents" />
                    <RoutedUICommand x:Key="CompressEvents" Text="CompressEvents" />
                    <RoutedUICommand x:Key="Test" Text="Test" />
                    <RoutedUICommand x:Key="BufferClear" Text="BufferClear" />
                    <RoutedUICommand x:Key="ToolsFindText" Text="ToolsFindText" />
                    <RoutedUICommand x:Key="ToolsFindForward" Text="ToolsFindForward" />
                    <RoutedUICommand x:Key="ToolsFindBackward" Text="ToolsFindbackward" />
                    <RoutedUICommand x:Key="NewSubmodelFromPlugin" Text="NewSubmodelFromPlugin" />
                    <RoutedUICommand x:Key="SaveOptionsFromPlugin" Text="SaveOptionsFromPlugin" />
                    <RoutedUICommand x:Key="ConvertElement" Text="ConvertElement" />
                    <RoutedUICommand x:Key="EventsShowLogMenu" Text="EventsShowLogMenu" />
                    <RoutedUICommand x:Key="EventsShowLogKey" Text="EventsShowLogKey" />
                    <RoutedUICommand x:Key="EventsResetLocks" Text="EventsResetLocks" />
                    <RoutedUICommand x:Key="Help" Text="Help" />
                    <RoutedUICommand x:Key="About" Text="About" />
                    <RoutedUICommand x:Key="HelpGithub" Text="HelpGithub" />
                    <RoutedUICommand x:Key="FaqGithub" Text="FaqGithub" />
                    <RoutedUICommand x:Key="HelpIssues" Text="HelpIssues" />
                    <RoutedUICommand x:Key="HelpOptionsInfo" Text="HelpOptionsInfo" />

                    <RoutedUICommand x:Key="FileRepoNew" Text="FileRepoNew" />
                    <RoutedUICommand x:Key="FileRepoOpen" Text="FileRepoOpen" />
                    <RoutedUICommand x:Key="FileRepoConnectRepository" Text="FileRepoConnectRepository" />
                    <RoutedUICommand x:Key="FileRepoConnectRegistry" Text="FileRepoConnectRegistry" />
                    <RoutedUICommand x:Key="FileRepoLoadWoPrompt" Text="FileRepoLoadWoPrompt" />
                    <RoutedUICommand x:Key="FileRepoCreateLRU" Text="FileRepoCreateLRU" />
                    <RoutedUICommand x:Key="FileRepoQuery" Text="FileRepoQuery" />

                    <!-- TODO: move this to separate xaml file -->
                    <ControlTemplate x:Key="MenuItemControlTemplateDropShadow" TargetType="{x:Type MenuItem}">
                        <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Grid VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                                <Path x:Name="GlyphPanel" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="3" Visibility="Collapsed" VerticalAlignment="Center"/>
                                <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom">
                                    <Border x:Name="SubMenuBorder" BorderBrush="#FF999999" Margin="0,0,8,8" BorderThickness="1" Background="#FFF0F0F0" Padding="2">
                                        <Border.Effect>
                                            <DropShadowEffect BlurRadius="10" Opacity="0.7"/>
                                        </Border.Effect>
                                        <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                                </Canvas>
                                                <Rectangle Fill="#FFD7D7D7" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
                                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                            </Trigger>
                            <Trigger Property="Icon" Value="{x:Null}">
                                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter Property="Background" TargetName="templateRoot" Value="#3D26A0DA"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                                <Setter Property="Fill" TargetName="GlyphPanel" Value="#FF707070"/>
                            </Trigger>
                            <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Key="N" Modifiers="Ctrl" Command="{StaticResource New}"/>
        <KeyBinding Key="O" Modifiers="Ctrl" Command="{StaticResource Open}"/>
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{StaticResource Save}"/>
        <KeyBinding Key="C" Modifiers="Ctrl" Command="{StaticResource Close}"/>
        <KeyBinding Key="X" Modifiers="Ctrl" Command="{StaticResource OpenAux}"/>
        <KeyBinding Key="L" Modifiers="Ctrl" Command="{StaticResource EventsShowLogKey}"/>
        <KeyBinding Key="O" Modifiers="Ctrl+Shift" Command="{StaticResource ConnectIntegrated}"/>
        <KeyBinding Key="F6" Command="{StaticResource ConnectRest}"/>
        <KeyBinding Key="F6" Modifiers="Shift" Command="{StaticResource ServerRest}"/>
        <KeyBinding Key="F4" Modifiers="Alt" Command="{StaticResource Exit}"/>
        <KeyBinding Key="E" Modifiers="Ctrl" Command="{StaticResource EditKey}"/>
        <KeyBinding Key="H" Modifiers="Ctrl" Command="{StaticResource HintsKey}"/>
        <KeyBinding Key="I" Modifiers="Ctrl" Command="{StaticResource ShowIriKey}"/>
        <KeyBinding Key="C" Modifiers="Ctrl+Shift" Command="{StaticResource CopyClipboardElementJson}"/>
        <KeyBinding Key="F1" Command="{StaticResource Help}"/>
        <KeyBinding Key="F12" Command="{StaticResource FileRepoQuery}"/>
        <KeyBinding Key="A" Modifiers="Ctrl" Command="{StaticResource QueryRepo}"/>
        <KeyBinding Key="F" Modifiers="Ctrl" Command="{StaticResource ToolsFindText}"/>
        <KeyBinding Key="F3" Command="{StaticResource ToolsFindForward}"/>
        <KeyBinding Key="F3" Modifiers="Shift" Command="{StaticResource ToolsFindBackward}"/>
        <KeyBinding Key="M" Modifiers="Ctrl+Shift" Command="{StaticResource NewSubmodelFromPlugin}"/>
    </Window.InputBindings>

    <Window.CommandBindings>
		<CommandBinding Command="{StaticResource ExportSMD}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource New}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource Open}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource Save}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource SaveAs}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource Close}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource Sign}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource ValidateCertificate}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource Encrypt}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource Decrypt}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource CheckAndFix}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource Exit}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource OpenAux}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource CloseAux}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource ConnectSecure}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource ConnectIntegrated}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource ConnectOpcUa}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource ConnectRest}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource QueryRepo}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource GenRepo}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource PrintRepo}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource PrintAsset}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource ImportAML}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource ImportSubmodel}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource ImportSubmodelElements}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource OPCRead}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource SubmodelWrite}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource SubmodelRead}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource SubmodelPut}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource SubmodelGet}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource BMEcatImport}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource CSVImport}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource TDImport}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource SubmodelTDExport}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource ExportAML}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource OpcUaImportNodeSet}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource OPCUAi4aasImport}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource OPCUAi4aasExport}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource OpcUaExportNodeSetUaPlugin}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource CopyClipboardElementJson}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource ExportGenericForms}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource ExportPredefineConcepts}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource ExportTable}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource ImportTable}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource ExportUml}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource ServerRest}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource MQTTPub}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource ServerPluginEmptySample}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource ServerPluginOPCUA}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource ServerPluginMQTT}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource EditKey}" Executed="CommandBinding_Executed" />
        <CommandBinding Command="{StaticResource EditMenu}" Executed="CommandBinding_Executed" />
        <CommandBinding Command="{StaticResource HintsKey}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource HintsMenu}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource ShowIriKey}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource ShowIriMenu}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource VerboseConnect}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource AnimateElements}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource ObserveEvents}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource CompressEvents}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource Test}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource BufferClear}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource ToolsFindText}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource ToolsFindForward}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource ToolsFindBackward}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource NewSubmodelFromPlugin}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource SaveOptionsFromPlugin}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource ConvertElement}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource EventsShowLogKey}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource EventsShowLogMenu}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource EventsResetLocks}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource Help}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource About}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource HelpGithub}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource FaqGithub}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource HelpIssues}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource HelpOptionsInfo}" Executed="CommandBinding_Executed"/>

        <CommandBinding Command="{StaticResource FileRepoNew}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource FileRepoOpen}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource FileRepoConnectRepository}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource FileRepoConnectRegistry}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource FileRepoLoadWoPrompt}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource FileRepoCreateLRU}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource FileRepoQuery}" Executed="CommandBinding_Executed"/>
    </Window.CommandBindings>

    <Grid x:Name="OuterGrid">

        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid x:Name="InnerGrid">
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <!-- Initially, the concurrent activities (events, plugins) are initially hidden -->
                <RowDefinition Height="0" x:Name="RowDefinitionConcurrent" /> <!-- Set to 150 to see events in XAML -->
                <RowDefinition Height="28" />
            </Grid.RowDefinitions>

            <GridSplitter Grid.Row="3" HorizontalAlignment="Stretch" VerticalAlignment="Top" 
                          ResizeBehavior="PreviousAndNext" Height="5" Background="#FFBCBCBC"/>

            <!-- Menu area -->

            <Grid Grid.Row="0" Grid.ColumnSpan="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="220" />
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Menu Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="0" VerticalAlignment="Center" FontSize="14" Background="Transparent">
                    <MenuItem Header="_File" Template="{DynamicResource MenuItemControlTemplateDropShadow}">
                        <MenuItem Header="_New .." Command="{StaticResource New}"/>
                        <MenuItem Header="_Open .." InputGestureText="Ctrl+O" Command="{StaticResource Open}"/>
                        <MenuItem Header="Connect .." InputGestureText="Ctrl+Shift+O" Command="{StaticResource ConnectIntegrated}"/>
                        <MenuItem Header="_Save" InputGestureText="Ctrl+S" Command="{StaticResource Save}"/>
                        <MenuItem Header="_Save as .." Command="{StaticResource SaveAs}"/>
                        <MenuItem Header="_Close .." Command="{StaticResource Close}"/>
                        <MenuItem Header="Check, validate and fix .." Command="{StaticResource CheckAndFix}"/>
                        <MenuItem Header="Security ..">
                            <MenuItem Header="_Sign .." Command="{StaticResource Sign}"/>
                            <MenuItem Header="_Validate .." Command="{StaticResource ValidateCertificate}"/>
                            <MenuItem Header="_Encrypt .." Command="{StaticResource Encrypt}"/>
                            <MenuItem Header="_Decrypt .." Command="{StaticResource Decrypt}"/>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="Open Au_xiliary AAS .." InputGestureText="Ctrl+X" Command="{StaticResource OpenAux}"/>
                        <MenuItem Header="Close Auxiliary AAS" Command="{StaticResource CloseAux}"/>
                        <Separator/>
                        <MenuItem Header="Further connect options ..">
                            <MenuItem Header="Secure Connect .." InputGestureText="Ctrl+Shift+O" Command="{StaticResource ConnectSecure}"/>
                            <MenuItem Header="Connect via OPC-UA .." Command="{StaticResource ConnectOpcUa}"/>
                            <MenuItem Header="Connect via REST .." InputGestureText="F6" Command="{StaticResource ConnectRest}"/>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="AASX File Repository ..">
                            <MenuItem Header="New (local) repository.." Command="{StaticResource FileRepoNew}"/>
                            <MenuItem Header="Open (local) repository .." Command="{StaticResource FileRepoOpen}"/>
                            <MenuItem Header="Connect HTTP/REST repository .." Command="{StaticResource FileRepoConnectRepository}"/>
                            <MenuItem Header="Query HTTP/REST registry .." Command="{StaticResource FileRepoConnectRegistry}"/>
                            <Separator/>
                            <MenuItem Header="Create last recently used list .." Command="{StaticResource FileRepoCreateLRU}"/>
                            <Separator/>
                            <MenuItem Header="Query open repositories .." InputGestureText="F12" Command="{StaticResource FileRepoQuery}"/>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="Import ..">
                            <MenuItem Header="Import AutomationML into AASX .." Command="{StaticResource ImportAML}"/>
                            <MenuItem Header="Import Submodel from JSON .." Command="{StaticResource SubmodelRead}"/>
                            <MenuItem Header="GET Submodel from URL .." Command="{StaticResource SubmodelGet}"/>
                            <MenuItem Header="Import Submodel from Dictionary .." Command="{StaticResource ImportSubmodel}"/>
                            <MenuItem Header="Import Submodel Elements from Dictionary .." Command="{StaticResource ImportSubmodelElements}"/>
                            <MenuItem Header="Import BMEcat-file into SubModel .." Command="{StaticResource BMEcatImport}"/>
                            <MenuItem Header="Import Thing Description JSON LD document into SubModel .." Command="{StaticResource TDImport}"/>
                            
                            <MenuItem Header="Import CSV-file into SubModel .." Command="{StaticResource CSVImport}"/>
                            <MenuItem Header="Import AAS from i4aas-nodeset .." Command="{StaticResource OPCUAi4aasImport}"/>
                            <MenuItem Header="Import OPC UA nodeset.xml as Submodel .." Command="{StaticResource OpcUaImportNodeSet}"/>
                            <MenuItem Header="Read OPC values into SubModel .." Command="{StaticResource OPCRead}"/>
                            <MenuItem Header="Import SubmodelElements from Table .." Command="{StaticResource ImportTable}"/>
                        </MenuItem>
                        <MenuItem Header="Export ..">
                            <MenuItem Header="Export AutomationML .." Command="{StaticResource ExportAML}"/>
                            <MenuItem Header="Export Submodel to JSON .." Command="{StaticResource SubmodelWrite}"/>
                            <MenuItem Header="PUT Submodel to URL .." Command="{StaticResource SubmodelPut}"/>
                            <MenuItem Header="Export AAS as i4aas-nodeset .." Command="{StaticResource OPCUAi4aasExport}"/>
                            <MenuItem Header="Export OPC UA Nodeset2.xml (via UA server plug-in) .." Command="{StaticResource OpcUaExportNodeSetUaPlugin}"/>
                            <MenuItem Header="Copy selected element JSON to clipboard" InputGestureText="Shift+Ctrl+C" Command="{StaticResource CopyClipboardElementJson}"/>
                            <MenuItem Header="Export Submodel as options for GenericForms .." Command="{StaticResource ExportGenericForms}"/>
                            <MenuItem Header="Export Submodel as snippet for PredefinedConcepts .." Command="{StaticResource ExportPredefineConcepts}"/>
                            <MenuItem Header="Export Submodel as Thing Description JSON LD document" Command="{StaticResource SubmodelTDExport}"/>
                            <MenuItem Header="Print Asset as code sheet .." Command="{StaticResource PrintAsset}"/>
							              <MenuItem Header="Export TeDZ Simulation Model Description (SMD) .." Command="{StaticResource ExportSMD}"/>
                            <MenuItem Header="Export SubmodelElements as Table .." Command="{StaticResource ExportTable}"/>
                            <MenuItem Header="Export SubmodelElements as UML .." Command="{StaticResource ExportUml}"/>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="Server ..">
                            <MenuItem Header="Serve AAS as REST .." InputGestureText="Shift+F6" Command="{StaticResource ServerRest}"/>
                            <MenuItem Header="Publish AAS via MQTT .." Command="{StaticResource MQTTPub}"/>
                            <Separator/>
                            <MenuItem Header="Plugin: Empty Sample .." Command="{StaticResource ServerPluginEmptySample}"/>
                            <MenuItem Header="Plugin: OPC UA .." Command="{StaticResource ServerPluginOPCUA}"/>
                            <MenuItem Header="Plugin: MQTT .." Command="{StaticResource ServerPluginMQTT}"/>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="_Exit" InputGestureText="Alt+F4" Command="{StaticResource Exit}"/>
                    </MenuItem>
                    <MenuItem Header="Workspace" Template="{DynamicResource MenuItemControlTemplateDropShadow}">
                        <MenuItem x:Name="MenuItemWorkspaceEdit" Header="_Edit" InputGestureText="Ctrl+E" IsCheckable="True" Command="{StaticResource EditMenu}"/>
                        <MenuItem x:Name="MenuItemWorkspaceHints" Header="_Hints" InputGestureText="Ctrl+H" IsCheckable="True" IsChecked="True" Command="{StaticResource HintsMenu}"/>
                        <MenuItem x:Name="MenuItemTest" Header="Test" Command="{StaticResource Test}"/>
                        <Separator/>
                        <MenuItem x:Name="MenuItemFind" Header="Find ..." Command="{StaticResource ToolsFindText}"/>
                        <Separator/>
                        <MenuItem Header="Plugins ..">
                            <MenuItem x:Name="MenuItemWorkspaceNewSubmodelFromPlugin" Header="New Submodel" InputGestureText="Ctrl+Shift+M" Command="{StaticResource NewSubmodelFromPlugin}"/>
                        </MenuItem>
                        <Separator/>
                        <MenuItem x:Name="MenuItemWorkspacConvertElement" Header="Convert .." Command="{StaticResource ConvertElement}"/>
                        <Separator/>
                        <MenuItem Header="Buffer ..">
                            <MenuItem x:Name="MenuItemWorkspaceBufferClear" Header="Clear internal paste buffer" Command="{StaticResource BufferClear}"/>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="Events ..">
                            <MenuItem x:Name="MenuItemWorkspaceEventsShowLog" Header="_Event log" InputGestureText="Ctrl+L" IsCheckable="True" Command="{StaticResource EventsShowLogMenu}"/>
                            <MenuItem x:Name="MenuItemWorkspaceEventsResetLocks" Header="Reset interlocking" Command="{StaticResource EventsResetLocks}"/>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="_Options"  Template="{DynamicResource MenuItemControlTemplateDropShadow}">
                        <MenuItem x:Name="MenuItemOptionsShowIri" Header="Show id as IRI" InputGestureText="Ctrl+I" IsCheckable="True" IsChecked="False" Command="{StaticResource ShowIriMenu}"/>
                        <MenuItem x:Name="MenuItemOptionsVerboseConnect" Header="Verbose connect" IsCheckable="True" IsChecked="False" Command="{StaticResource VerboseConnect}"/>
                        <MenuItem x:Name="MenuItemOptionsLoadWoPrompt" Header="Load without prompt" IsCheckable="True" IsChecked="False" Command="{StaticResource FileRepoLoadWoPrompt}"/>
                        <MenuItem x:Name="MenuItemOptionsAnimateElems" Header="Animate elements" IsCheckable="True" IsChecked="False" Command="{StaticResource AnimateElements}"/>
                        <MenuItem x:Name="MenuItemOptionsObserveEvents" Header="ObserveEvents" IsCheckable="True" IsChecked="False" Command="{StaticResource ObserveEvents}"/>
                        <MenuItem x:Name="MenuItemOptionsCompressEvents" Header="Compress events" IsCheckable="True" IsChecked="False" Command="{StaticResource CompressEvents}"/>
                        <MenuItem Header="Plugins ..">
                            <MenuItem x:Name="MenuItemWorkspaceSaveOptionFromPlugin" Header="Save options from plugin .." Command="{StaticResource SaveOptionsFromPlugin}"/>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="_Help"  Template="{DynamicResource MenuItemControlTemplateDropShadow}">
                        <MenuItem x:Name="MenuItemAbout" Header="About .." Command="{StaticResource About}"/>
                        <MenuItem x:Name="MenuItemHelpGithub" Header="Help on Github .." Command="{StaticResource HelpGithub}"/>
                        <MenuItem x:Name="MenuItemFaqGithub" Header="FAQ on Github .." Command="{StaticResource FaqGithub}"/>
                        <MenuItem x:Name="MenuItemFaqIssues" Header="Issues on Github .." Command="{StaticResource HelpIssues}"/>
                        <MenuItem x:Name="MenuItemGenerateOptionInfo" Header="Available options .." Command="{StaticResource HelpOptionsInfo}"/>
                    </MenuItem>
                </Menu>

                <local:VisualElementHistoryControl Grid.Column="2" x:Name="ButtonHistory" Margin="2" Width="50"
                        VisualElementRequested="ButtonHistory_ObjectRequested"
                        HomeRequested="ButtonHistory_HomeRequested"/>

                <StackPanel Grid.Row="0" Grid.Column="3" HorizontalAlignment="Right" Orientation="Horizontal">
                    <Image x:Name="LogoImage" VerticalAlignment="Stretch" Margin="2,2,4,2"/>
                </StackPanel>
            </Grid>

            <!-- Top area for advanced tools -->

            <Grid x:Name="ToolsGrid" Grid.Row="1" Grid.ColumnSpan="2" Visibility="Collapsed">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="97*" />
                    <ColumnDefinition Width="581*"/>
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TabControl x:Name="TabControlTools" Grid.Row="0" Grid.Column="0" BorderThickness="1" Grid.ColumnSpan="2" Margin="2">

                    <!-- Find -->
                    <TabItem x:Name="TabItemToolsFind" Visibility="Collapsed">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Find &amp; Replace" Background="{DynamicResource LightAccentColor}" Margin="2" Padding="2" VerticalAlignment="Center"/>
                            <!--
                            <WrapPanel Orientation="Horizontal">

                                <ComboBox x:Name="ComboBoxToolsFindText" Width="200" Margin="2" IsEditable="True"></ComboBox>
                                <Button x:Name="ButtonToolsFindBackward" Content="&#x25c0;" Margin="2" />
                                <Button x:Name="ButtonToolsFindForward" Content="&#x25b6;" Margin="2" />

                            </WrapPanel>
                            -->
                            <local:ToolControlFindReplace x:Name="ToolFindReplace"/>
                        </StackPanel>
                    </TabItem>

                </TabControl>

                <!-- Tools close -->
                <StackPanel Grid.Row="0" Grid.Column="2" Orientation="Vertical" Margin="2,4,2,2">
                    <Button x:Name="ButtonToolsClose" Content="&#x2716;" Click="ButtonTools_Click"/>
                </StackPanel>
            </Grid>

            <!-- 3 Vertical columns for AAS picture, Visual elements, DispEditElements -->

            <Grid x:Name="MainSpaceGrid" Grid.Row="2" Grid.ColumnSpan="2">
                <Grid.Background>
                    <SolidColorBrush Color="#FFE0E0E0"/>
                </Grid.Background>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="250" />
                </Grid.ColumnDefinitions>

                <GridSplitter HorizontalAlignment="Right"
                      VerticalAlignment="Stretch"
                      Grid.Column="1" ResizeBehavior="PreviousAndNext"
                      Grid.Row="0"
                      Width="5" Background="#FFBCBCBC"/>

                <GridSplitter HorizontalAlignment="Right"
                      VerticalAlignment="Stretch"
                      Grid.Column="3" ResizeBehavior="PreviousAndNext"
                      Grid.Row="0"
                      Width="5" Background="#FFBCBCBC"/>

                <!-- the leftmost column is the interactive picture of the AAS and (possible) repo view -->
                <Grid x:Name="ColumnAasRepoGrid" Grid.Row="0" Grid.Column="0">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <!-- Row height set to zero to have invisibility ov repo list control at very program start -->
                        <RowDefinition x:Name="RowDefinitonForRepoList" Height="50" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <GridSplitter HorizontalAlignment="Stretch"
                      VerticalAlignment="Top"
                      Grid.Row="1" Grid.Column="0"
                      ResizeBehavior="PreviousAndNext"
                      Height="5" Background="#FFBCBCBC"/>

                    <Viewbox Grid.Row="0" Grid.Column="0">
                        <Canvas  VerticalAlignment="Center" Width="200" Height="340" Margin="10">
                            <Path Data="M0,10 L9.5,-0.5 189.5,-0.5 199.5,9.5 199.75063,179.81347 184.71301,179.81347 184.71303,139.68809 174.68797,129.65674 24.31203,129.65674 14.286967,139.68809 14.286735,184.82915 -0.75087814,184.82915 z" Fill="{DynamicResource DarkAccentColor}" HorizontalAlignment="Left" Height="186.25" Margin="-0.75,-0.5,0,0" Stretch="Fill" Stroke="{DynamicResource DarkestAccentColor}" VerticalAlignment="Top" Width="201.5" StrokeThickness="1.5"/>
                            <Path Data="M34.499849,79.5 L24.499838,89.5 24.750674,270.54721 175.25251,270.54721 174.5,89.5 C174.5,89.5 164.49999,79.5 164.49999,79.5 L34.78413,79.748947" Fill="#FFD9D9D9" HorizontalAlignment="Left" Height="191.748" Margin="24,149.002,0,-40.75" Stretch="Fill" Stroke="#FF7F7F7F" VerticalAlignment="Top" Width="151.75" StrokeThickness="1.5"/>
                            <Rectangle Fill="{DynamicResource LightAccentColor}" HorizontalAlignment="Left" Height="20" Margin="10,40,0,0" Stroke="{DynamicResource DarkestAccentColor}" StrokeThickness="1.5" VerticalAlignment="Top" Width="180"/>
                            <Label Content="Submodel" HorizontalAlignment="Left" Height="25" Margin="10,37.332,0,0" VerticalAlignment="Top" Width="180" FontSize="10" VerticalContentAlignment="Center" FontWeight="Bold"/>
                            <Rectangle Fill="White" HorizontalAlignment="Left" Height="20" Margin="30,70,0,0" StrokeThickness="1.5" VerticalAlignment="Top" Width="160"/>
                            <Label Content="Submodel element" HorizontalAlignment="Left" Height="25" Margin="30,66.998,0,0" VerticalAlignment="Top" Width="160" FontSize="10" VerticalContentAlignment="Center" FontWeight="Bold"/>
                            <Rectangle Fill="White" HorizontalAlignment="Left" Height="20" Margin="30,100,0,0" StrokeThickness="1.5" VerticalAlignment="Top" Width="160"/>
                            <Label Content="Submodel element" HorizontalAlignment="Left" Height="25" Margin="30,96.968,0,0" VerticalAlignment="Top" Width="160" FontSize="10" VerticalContentAlignment="Center" FontWeight="Bold"/>
                            <TextBlock x:Name="AasId" HorizontalAlignment="Left" Height="39" TextWrapping="WrapWithOverflow" VerticalAlignment="Top" Width="180" FontSize="9" TextTrimming="CharacterEllipsis" Canvas.Left="10" Canvas.Top="8"><Run Text="www.festo.com/wewdcwschdscbj"/><Run Text=" "/><Run Text="hbcdshjbchjds"/><Run Text=" "/><Run Text="bhjcbdshcbjhsdbchjdsbhcdsbhjcbdshjcbjdsbchbscdh"/></TextBlock>
                            <TextBlock x:Name="AssetId" HorizontalAlignment="Left" Height="40" TextWrapping="Wrap" VerticalAlignment="Top" Width="130" FontSize="9" TextTrimming="CharacterEllipsis" Canvas.Left="35" Canvas.Top="157"><Run Text="www.festo.com/wewdcwschdscbj"/><Run Text=" "/><Run Text="hbcdshjbchjds"/><Run Text=" "/><Run Text="bhjcbdshcbjhsdbchjdsbhcdsbhjcbdshjcbjdsbchbscdh"/></TextBlock>
                            <Image x:Name="AssetPic" HorizontalAlignment="Left" Height="130" VerticalAlignment="Top" Width="130" Canvas.Left="35" Canvas.Top="200"/>
                        </Canvas>
                    </Viewbox>

                    <!--
                    <repo:AasxFileRepoControl x:Name="RepoControl" Grid.Row="2" Grid.Column="0">
                    </repo:AasxFileRepoControl>
                    -->

                    <repo:PackageContainerListOfListControl x:Name="RepoListControl" Grid.Row="2" Grid.Column="0">
                    </repo:PackageContainerListOfListControl>

                </Grid>


                <!-- MIHO1 -->
                <local:DiplayVisualAasxElements Grid.Row="0" Grid.Column="2" x:Name="DisplayElements" SelectedItemChanged="DisplayElements_SelectedItemChanged" MouseDoubleClick="DisplayElements_MouseDoubleClick">
                </local:DiplayVisualAasxElements>
               
                <TabControl x:Name="ElementTabControl" Grid.Column="4" MinWidth="320">
                    <TabItem x:Name="elementTabItem" Header="Element">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition x:Name="RowContentPanels" Height="48"/>
                            </Grid.RowDefinitions>

                            <ScrollViewer x:Name="ScrollViewerElement" Grid.Row="0" VerticalScrollBarVisibility="Auto"
                                          Padding="1,1,5,1">
                                <local:DispEditAasxEntity x:Name="DispEditEntityPanel">
                                </local:DispEditAasxEntity>
                            </ScrollViewer>

                            <Grid Grid.Row="1" x:Name="ContentPanelNoEdit" Visibility="Visible">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Button x:Name="UpdateContent" Grid.Row="0" Grid.Column="0" Margin="4" Click="UpdateContent_Click">
                                    <TextBlock Height="Auto" TextWrapping="Wrap" TextAlignment="Center">Reload</TextBlock>
                                </Button>
                                <Border Grid.Row="0" Grid.Column="1" VerticalAlignment="Stretch" Margin="4" BorderBrush="#ddd" BorderThickness="1" Background="{DynamicResource LightAccentColor}">
                                    <Border VerticalAlignment="Center">
                                        <TextBlock x:Name="DragSource" TextWrapping="Wrap" TextAlignment="Center" PreviewMouseMove="DragSource_PreviewMouseMove" PreviewMouseLeftButtonDown="DragSource_PreviewMouseLeftButtonDown" >Drag from here!</TextBlock>
                                    </Border>
                                </Border>
                                <Button x:Name="ShowContent" Grid.Row="0" Grid.Column="2" Margin="4" Click="ShowContent_Click">
                                    <TextBlock Height="Auto" TextWrapping="Wrap" TextAlignment="Center">Show Content</TextBlock>
                                </Button>
                            </Grid>

                            <Grid Grid.Row="1" x:Name="ContentPanelEdit" Visibility="Hidden">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Button x:Name="ContentTakeOver" Grid.Row="0" Grid.Column="0" Margin="4" Click="ContentTakeOver_Click">
                                    <TextBlock Height="Auto" TextWrapping="Wrap" TextAlignment="Center">Take over changes</TextBlock>
                                </Button>
                                <Button x:Name="ContentUndo" Grid.Row="0" Grid.Column="2" Margin="4" Click="ContentUndo_Click">
                                    <TextBlock Height="Auto" TextWrapping="Wrap" TextAlignment="Center">Undo changes</TextBlock>
                                </Button>
                            </Grid>
                        </Grid>

                    </TabItem>

                    <TabItem Header="Content" x:Name="elementTabContent">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border x:Name="CefContainer">

                            </Border>
                            <!--
                            xmlns:cefSharp="clr-namespace:CefSharp.Wpf;assembly=CefSharp.Wpf"
                            <cefSharp:ChromiumWebBrowser x:Name="theBrowser" Grid.Row="0" Address="https://github.com/admin-shell/io/blob/master/README.md" />
                            -->
                        </Grid>
                    </TabItem>
                </TabControl>

                <!--
                <Border x:Name="ShowKeys" Grid.Column="4" HorizontalAlignment="Right" VerticalAlignment="Top" Padding="0" Margin="0" CornerRadius="2">
                    <Label Content="[X]" Margin="0" Padding="0" VerticalAlignment="Top" VerticalContentAlignment="Top"/>
                </Border>
                -->

                <Button x:Name="ButtonKeyboard" Grid.Column="4" 
                        HorizontalAlignment="Right" VerticalAlignment="Top" 
                        Height="17" Foreground="DarkGray" BorderBrush="DarkGray" Padding="4,-3,4,0" Margin="5,3,5,0" Content="&#x2328;" FontSize="15"
                        Click="ButtonKeyboard_Click">
                    <Button.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="5"/>
                        </Style>
                    </Button.Resources>
                </Button>

                <!-- Decision: use Content panel
                <Popup IsOpen="True" StaysOpen="False" PlacementTarget="{Binding ElementName=ButtonKeyboard}" Placement="Left" 
                       HorizontalOffset="20" VerticalOffset="20"
                       Height="{Binding ElementName=ElementTabControl, Path=ActualHeight}">
                    <Border Background="LightYellow">
                        <TextBlock>I'm the popup</TextBlock>
                    </Border>
                </Popup>
                -->

            </Grid>

            <!-- concurrent activities: Events / Plugins / .. -->

            <Grid Grid.Row="4">

                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                
                <TabControl x:Name="TabControlConcurrent" TabStripPlacement="Left">
                    <TabItem Header="Events" x:Name="TabItemConcurrentEvents">
                        <events:AasEventCollectionViewer x:Name="UserContrlEventCollection" />
                    </TabItem>
                    <TabItem Header="Agents" x:Name="TabItemConcurrentAgents">
                        <main:MainWindowAgentsView x:Name="UserControlAgentsView" Background="#c0000020"/>
                    </TabItem>
                </TabControl>
            </Grid>
            
            <!-- Footer area -->

            <DockPanel Grid.Row="5" Margin="0,2,0,0">
                <Button x:Name="ButtonReport" DockPanel.Dock="Right" Margin="6,3,2,2" Padding="2,0,2,0" Click="ButtonReport_Click">Report ..</Button>
                <Button x:Name="ButtonClear" DockPanel.Dock="Right" Margin="6,3,2,2" Padding="2,0,2,0" Click="ButtonReport_Click">Clear</Button>

                <Label x:Name="LabelNumberErrors"
                       DockPanel.Dock="Right" MinWidth="60" Margin="2,3,2,2" Padding="2,0,2,0"
                       VerticalContentAlignment="Center" BorderBrush="LightGray" BorderThickness="1"
                       Content="No errors"/>

                <Grid DockPanel.Dock="Right">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <ProgressBar x:Name="ProgressBarInfo" 
                             BorderBrush="LightGray"
                             Background="Transparent" Foreground="{DynamicResource DarkAccentColor}" 
                             MinWidth="120" Margin="2,3,6,2"/>
                    <Label Grid.Row="0" Grid.Column="0" x:Name="LabelProgressBarInfo"
                            Content="0 bytes" Foreground="LightGray"
                            HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                </Grid>

                <Label x:Name="Message" VerticalContentAlignment="Center"></Label>
            </DockPanel>

        </Grid>

        <!--
        <local:SelectFromRepository Grid.Row="0" Grid.Column="0" Width="Auto" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">

        </local:SelectFromRepository>
        -->


        <Grid x:Name="GridFlyover" Grid.Row="0" Grid.Column="0" Visibility="Hidden" Background="#c0000020">
            <!--
            <local:SelectFromRepository Grid.Row="0" Grid.Column="0" Width="Auto" Height="Auto" Margin="10">

            </local:SelectFromRepository>
            -->
        </Grid>

    </Grid>
</Window>
