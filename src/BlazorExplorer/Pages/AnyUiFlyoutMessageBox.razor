@page "/AnyUiFlyoutMessageBox"
@using AnyUi
@using BlazorUI.Data
@inject BlazorUI.Data.AASService SubmodelService
@inject BlazorUI.Data.BlazorSession bi

@if(EventSession != null && DialogueData is AnyUiDialogueDataMessageBox ddmb)
{
    @* see Modal.razor: Bootstrap inner dialog classes *@

	<div class="modal-header">
		<h3 class="modal-title" id="exampleModalLongTitle">@ddmb.Caption</h3>
		<button type="button" class="close btn btn-backdrop" aria-label="Close"
			@onclick="() => LeaveResult(null)">
			<span aria-hidden="true">&times;</span>
		</button>
	</div>
	<div class="modal-body">
		<h5>
			<MultiLineText 
				InputString="@ddmb.Message" />			
		</h5>
	</div>
	<div class="modal-footer">

		@if (ddmb.Buttons == AnyUiMessageBoxButton.OK)
		{
			<button type="button" class="btn btn-primary-light btn-lg" @onclick="() => LeaveResult(AnyUiMessageBoxResult.OK)">OK</button>
		}

		@if (ddmb.Buttons == AnyUiMessageBoxButton.OKCancel)
		{
			<button type="button" class="btn btn-secondary-light btn-lg" @onclick="() => LeaveResult(AnyUiMessageBoxResult.Cancel)">Cancel</button>
			<button type="button" class="btn btn-primary-light btn-lg" @onclick="() => LeaveResult(AnyUiMessageBoxResult.OK)">OK</button>
		}

		@if (ddmb.Buttons == AnyUiMessageBoxButton.YesNo)
		{
			<button type="button" class="btn btn-secondary-light btn-lg" @onclick="() => LeaveResult(AnyUiMessageBoxResult.No)">No</button>
			<button type="button" class="btn btn-primary-light btn-lg" @onclick="() => LeaveResult(AnyUiMessageBoxResult.Yes)">Yes</button>
		}

		@if (ddmb.Buttons == AnyUiMessageBoxButton.YesNoCancel)
		{
			<button type="button" class="btn btn-secondary-light btn-lg" @onclick="() => LeaveResult(AnyUiMessageBoxResult.Cancel)">Cancel</button>
			<button type="button" class="btn btn-secondary-light btn-lg" @onclick="() => LeaveResult(AnyUiMessageBoxResult.No)">No</button>
			<button type="button" class="btn btn-primary-light btn-lg" @onclick="() => LeaveResult(AnyUiMessageBoxResult.Yes)">Yes</button>
		}

	</div>
}

@code {
	[Parameter]
	public AnyUiHtmlEventSession EventSession { get; set; }

	[Parameter]
	public AnyUiDialogueDataBase DialogueData { get; set; }

	public void LeaveResult(AnyUiMessageBoxResult? result)
	{
		if (DialogueData is AnyUiDialogueDataMessageBox ddmb && result.HasValue) {
			ddmb.ResultButton = result.Value;
		}

		EventSession?.EndModal(result.HasValue);
	}
}
